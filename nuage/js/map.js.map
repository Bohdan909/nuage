{"version":3,"sources":["map.js"],"names":["initialize","mapOptions","zoom","scrollwheel","draggable","center","google","maps","LatLng","styles","featureType","elementType","stylers","saturation","color","lightness","visibility","weight","map","Map","document","getElementById","setStyles","point","image","MarkerImage","Size","setMarker","geocoder","Geocoder","submit","btnLoc","querySelectorAll","addEventListener","address","value","geocodeAddress","Array","prototype","forEach","call","item","navigator","geolocation","getCurrentPosition","position","userLat","coords","latitude","userLong","longitude","$","selectize","allowEmptyOption","create","onChange","val","onDropdownOpen","perfectScrollbar","wheelSpeed","wheelPropagation","minScrollbarLength","Marker","icon","raiseOnDrag","setOptions","resultsMap","geocode","results","status","setCenter","geometry","location","alert"],"mappings":"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","file":"map.js","sourcesContent":["\n\nfunction initialize() {\n\n  let mapOptions = {\n   \tzoom: 14,\n   \tscrollwheel: false,\n    draggable: true,\n   \tcenter: new google.maps.LatLng(55.819515, 37.490370)\n \t};\n\n  \n  let styles = [\n      {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": 36\n            },\n            {\n                \"color\": \"#333333\"\n            },\n            {\n                \"lightness\": 40\n            }\n        ]\n      },\n      {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n      },\n      {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n      },\n      {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n      },\n      {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 17\n            },\n            {\n                \"weight\": 1.2\n            }\n        ]\n      },\n      {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"saturation\": \"2\"\n            }\n        ]\n      },\n      {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": \"-1\"\n            }\n        ]\n      },\n      {\n        \"featureType\": \"administrative.country\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": \"0\"\n            }\n        ]\n      },\n      {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n      },\n      {\n        \"featureType\": \"poi\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n      },\n      {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n      },\n      {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#dedede\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n      },\n      {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#78bed6\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n      },\n      {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 29\n            },\n            {\n                \"weight\": 0.2\n            }\n        ]\n      },\n      {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 18\n            }\n        ]\n      },\n      {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n      },\n      {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            },\n            {\n                \"lightness\": 19\n            }\n        ]\n      },\n      {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#a7cdf0\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n      }\n  ]\n\n  var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);\n  setStyles();\n\n  var point = new google.maps.LatLng(55.819515, 37.490370);\n  var image = new google.maps.MarkerImage(\n    'images/marker.svg',\n    new google.maps.Size(33,33)\n  );\n\n  setMarker();\n\n  // Get Position  \n  var geocoder = new google.maps.Geocoder();\n  var submit = document.getElementById('submit');\n  var btnLoc = document.querySelectorAll('.ico-loc');\n  \n  submit.addEventListener('click', function(){\n    var address = document.getElementById('address').value;\n    geocodeAddress(geocoder, map, address);\n  });\n\n  Array.prototype.forEach.call(btnLoc, function(item){\n    item.addEventListener('click', function(){\n      navigator.geolocation.getCurrentPosition(function(position){\n\n        var userLat  = position.coords.latitude;\n        var userLong = position.coords.longitude;\n\n        address.value = \"\";\n        mapOptions.center = new google.maps.LatLng(userLat, userLong);\n        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);\n        point = new google.maps.LatLng(userLat, userLong);\n\n        setMarker();\n        setStyles();\n      });\n    });\n  });\n\n  var selectize = $(\"#select-city\").selectize({\n    allowEmptyOption: true,\n    create: true,\n\n    onChange: function(val){\n      var address = val;\n      geocodeAddress(geocoder, map, address);\n    },\n\n    onDropdownOpen: function(){\n      scrollSelectInit();\n    }\n  });\n\n  function scrollSelectInit(){\n    $(\".selectize-dropdown\").perfectScrollbar({\n        wheelSpeed: 0.5,\n        wheelPropagation: false,\n        minScrollbarLength: 20\n    });\n  }\n\n  function setMarker(){\n    new google.maps.Marker({\n      icon: image,\n      draggable: false,\n      raiseOnDrag: false,\n      map: map,\n      position: point\n    });\n  };\n\n  function setStyles(){\n    map.setOptions({styles: styles});\n  }\n}\n\n//google.maps.event.addDomListener(window, 'load', initialize);\n\nfunction geocodeAddress(geocoder, resultsMap, address){\n\n  geocoder.geocode({'address': address}, function(results, status) {\n    if (status === 'OK') {\n      resultsMap.setCenter(results[0].geometry.location);\n      var marker = new google.maps.Marker({\n        map: resultsMap,\n        position: results[0].geometry.location\n      });\n    } else {\n      alert('Geocode was not successful for the following reason: ' + status);\n    }\n  });\n}\n"]}