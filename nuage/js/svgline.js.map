{"version":3,"sources":["svgline.js"],"names":["SVG","tag","document","createElementNS","replaceRectsWithPaths","parentElement","rects","$","find","each","rectX","this","attr","rectY","rectX2","parseFloat","rectY2","convertedPath","insertAfter","remove","replaceLinesWithPaths","lines","replaceCirclesWithPaths","circles","cX","cY","r","r2","replaceEllipsesWithPaths","ellipses","rX","rY","replacePolygonsWithPaths","polygons","points","polyPoints","split","endPoint","replacePolylinesWithPaths","polylines","hideSVGPaths","paths","totalLength","getTotalLength","css","stroke-dashoffset","stroke-dasharray","setDash","_parentElement","i","replaceWithPaths"],"mappings":"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","file":"svgline.js","sourcesContent":["//If you want to add SVG to the DOM, jQuery won't do\n//http://www.benknowscode.com/2012/09/using-svg-elements-with-jquery_6812.html\n\nfunction SVG(tag) {\n    return document.createElementNS('http://www.w3.org/2000/svg', tag);\n}\n\n\n\nfunction replaceRectsWithPaths(parentElement) {\n    var rects = $(parentElement).find('rect');\n\n    $.each(rects, function() {\n\n        var rectX = $(this).attr('x');\n        var rectY = $(this).attr('y');\n\n        var rectX2 = parseFloat(rectX) + parseFloat($(this).attr('width'));\n        var rectY2 = parseFloat(rectY) + parseFloat($(this).attr('height'));\n\n        var convertedPath = 'M' + rectX + ',' + rectY + ' ' + rectX2 + ',' + rectY + ' ' + rectX2 + ',' + rectY2 + ' ' + rectX + ',' + rectY2 + ' ' + rectX + ',' + rectY;\n\n\n        $(SVG('path'))\n        .attr('d', convertedPath)\n        .attr('fill', $(this).attr('fill'))\n        .attr('stroke', $(this).attr('stroke'))\n        .attr('stroke-width', $(this).attr('stroke-width'))\n        .insertAfter(this);\n\n    });\n\n    $(rects).remove();\n}\n\n\n\nfunction replaceLinesWithPaths(parentElement) {\n\n\n    var lines = $(parentElement).find('line');\n\n    $.each(lines, function() {\n\n        var lineX1 = $(this).attr('x1');\n        var lineY1 = $(this).attr('y1');\n\n        var lineX2 = $(this).attr('x2');\n        var lineY2 = $(this).attr('y2');\n\n        var convertedPath = 'M' + lineX1 + ',' + lineY1 + ' ' + lineX2 + ',' + lineY2;\n\n\n        $(SVG('path'))\n        .attr('d', convertedPath)\n        .attr('fill', $(this).attr('fill'))\n        .attr('stroke', $(this).attr('stroke'))\n        .attr('stroke-width', $(this).attr('stroke-width'))\n        .insertAfter(this);\n\n    });\n\n    $(lines).remove();\n}\n\nfunction replaceCirclesWithPaths(parentElement) {\n\n    var circles = $(parentElement).find('circle');\n    $.each(circles, function() {\n        var cX = $(this).attr('cx');\n        var cY = $(this).attr('cy');\n        var r = $(this).attr('r');\n        var r2 = parseFloat(r * 2);\n\n        var convertedPath = 'M' + cX + ', ' + cY + ' m' + (-r) + ', 0 ' + 'a ' + r + ', ' + r + ' 0 1,0 ' + r2 + ',0 ' + 'a ' + r + ', ' + r + ' 0 1,0 ' + (-r2) + ',0 ';\n\n        $(SVG('path'))\n        .attr('d', convertedPath)\n        .attr('fill', $(this).attr('fill'))\n        .attr('stroke', $(this).attr('stroke'))\n        .attr('stroke-width', $(this).attr('stroke-width'))\n        .insertAfter(this);\n\n    });\n\n    $(circles).remove();\n}\n\nfunction replaceEllipsesWithPaths(parentElement) {\n    var ellipses = $(parentElement).find('ellipse');\n    $.each(ellipses, function() {\n        var cX = $(this).attr('cx');\n        var cY = $(this).attr('cy');\n        var rX = $(this).attr('rx');\n        var rY = $(this).attr('ry');\n\n        var convertedPath = 'M' + cX + ', ' + cY + ' m' + (-rX) + ', 0 ' + 'a ' + rX + ', ' + rY + ' 0 1,0 ' + rX*2 + ',0 ' + 'a ' + rX + ', ' + rY + ' 0 1,0 ' + (-rX*2) + ',0 ';\n\n        $(SVG('path'))\n        .attr('d', convertedPath)\n        .attr('fill', $(this).attr('fill'))\n        .attr('stroke', $(this).attr('stroke'))\n        .attr('stroke-width', $(this).attr('stroke-width'))\n        .insertAfter(this);\n\n    });\n\n    $(ellipses).remove();\n}\n\nfunction replacePolygonsWithPaths(parentElement) {\n    var polygons = $(parentElement).find('polygon');\n    $.each(polygons, function() {\n        var points = $(this).attr('points');\n        var polyPoints = points.split(/[ ,]+/);\n        var endPoint = polyPoints[0] + ', ' + polyPoints[1];\n\n        $(SVG('path'))\n        .attr('d', 'M' + points + ' ' + endPoint)\n        .attr('fill', $(this).attr('fill'))\n        .attr('stroke', $(this).attr('stroke'))\n        .attr('stroke-width', $(this).attr('stroke-width'))\n        .insertAfter(this);\n\n    });\n    $(polygons).remove();\n}\n\nfunction replacePolylinesWithPaths(parentElement) {\n    var polylines = $(parentElement).find('polyline');\n    $.each(polylines, function() {\n        var points = $(this).attr('points');\n\n        $(SVG('path'))\n        .attr('d', 'M' + points)\n        .attr('fill', $(this).attr('fill'))\n        .attr('stroke', $(this).attr('stroke'))\n        .attr('stroke-width', $(this).attr('stroke-width'))\n        .insertAfter(this);\n\n    });\n\n    $(polylines).remove();\n}\n\nfunction hideSVGPaths(parentElement) {\n    var paths = $(parentElement).find('path');\n    //for each PATH..\n    $.each( paths, function() {\n        //get the total length\n        var totalLength = this.getTotalLength();\n        //set PATHs to invisible\n        $(this).css({\n            'stroke-dashoffset': totalLength,\n            'stroke-dasharray': totalLength + ' ' + totalLength\n        });\n    });\n}\n\nfunction setDash(_parentElement) {\n    var paths = $(_parentElement).find('path');\n    //for each PATH..\n    $.each( paths, function(i) {\n        //get the total length\n        var totalLength = this.getTotalLength();\n\n        //set PATHs to invisible\n        $(this).css({\n            'stroke-dashoffset': totalLength,\n            'stroke-dasharray': totalLength + ' ' + totalLength\n        });\n    });\n}\n\nfunction replaceWithPaths(parentElement) {\n    replaceRectsWithPaths(parentElement);\n    replaceLinesWithPaths(parentElement);\n    replaceEllipsesWithPaths(parentElement);\n    replaceCirclesWithPaths(parentElement);\n    replacePolygonsWithPaths(parentElement);\n    replacePolylinesWithPaths(parentElement);    \n}\n\n\n\n"]}