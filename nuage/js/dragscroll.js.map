{"version":3,"sources":["dragscroll.js"],"names":["root","factory","define","amd","exports","dragscroll","this","newScrollX","newScrollY","_window","window","_document","document","friction","velocityX","velocityY","dragged","reset","i","el","length","container","md","mu","mm","slice","call","getElementsByClassName","lastClientX","lastClientY","pushed","scroller","cont","e","style","cursor","classList","add","hasAttribute","elementFromPoint","pageX","pageY","clientX","clientY","preventDefault","requestAnimationFrame","inertialScroll","element","scrollLeft","scrollTop","body","documentElement","Math","abs","remove","readyState"],"mappings":"CASC,SAAUA,EAAMC,GACS,mBAAXC,QAAyBA,OAAOC,IACvCD,QAAQ,WAAYD,GACM,oBAAZG,QACdH,EAAQG,SAERH,EAASD,EAAKK,eANtB,CAQEC,KAAM,SAAUF,GACd,IAQIG,EAAYC,EARZC,EAAUC,OACVC,EAAYC,SAQZC,EAAW,IACXC,EAAY,EACZC,EAAY,EAEZC,KACAC,EAAQ,SAASC,EAAGC,GACpB,IAAKD,EAAI,EAAGA,EAAIF,EAAQI,SAEpBD,GADAA,EAAKH,EAAQE,MACLG,WAAaF,GACC,oBAdd,YAc2BA,EAAGG,GAAI,GAC1Cb,EAA2B,oBAhBrB,UAgBgCU,EAAGI,GAAI,GAC7Cd,EAA2B,oBAlBnB,YAkBgCU,EAAGK,GAAI,GAKnD,IADAR,KAAaS,MAAMC,KAAKf,EAAUgB,uBAAuB,eACpDT,EAAI,EAAGA,EAAIF,EAAQI,SACpB,SAAUD,EAAIS,EAAaC,EAAaC,EAAQC,EAAUC,IACrDA,EAAOb,EAAGE,WAAaF,GAAoB,iBAvBxC,YAyBAa,EAAKV,GAAK,SAASW,GACfd,EAAGe,MAAoB,aAAI,WAC3Bf,EAAGe,MAAiB,UAAI,WACxBf,EAAGe,MAAMC,OAAS,WAClBhB,EAAGiB,UAAUC,IAAI,YACZlB,EAAGmB,aAAa,gBACjB3B,EAAU4B,iBACNN,EAAEO,MAAOP,EAAEQ,QACVT,IAELF,EAAS,EACTF,EAAcK,EAAES,QAChBb,EAAcI,EAAEU,QAEhBV,EAAEW,mBAEP,GAGPnC,EAAwB,iBA7CtB,UA8CWuB,EAAKT,GAAK,SAASU,GACpBH,GACApB,OAAOmC,sBAAsB,YAkCzC,SAASC,EAAeC,IACnBhB,EAAWgB,EAAQhB,UAAUgB,GAASC,YAAclC,EACrDiB,EAASkB,WAAalC,EAClBgC,GAAWpC,EAAUuC,QACpBnB,EAAWpB,EAAUwC,iBAAiBH,YAAclC,EACrDiB,EAASkB,WAAalC,GAE1BD,GAAaD,EACbE,GAAaF,EAETuC,KAAKC,IAAItC,GAAa,IACtBL,OAAOmC,sBAAsB,WACzBC,EAAeC,KA7CXD,CAAe3B,KAIvBW,EAAS,EACTX,EAAGe,MAAoB,aAAI,OAC3Bf,EAAGe,MAAiB,UAAI,OACxBf,EAAGiB,UAAUkB,OAAO,YACpBnC,EAAGe,MAAMC,OAAS,QACnB,GAGP1B,EAAwB,iBA9DpB,YAgEAuB,EAAKR,GAAK,SAASS,GACXH,GACApB,OAAOmC,sBAAsB,YACxBd,EAAWZ,EAAGY,UAAUZ,GAAI6B,YACzBzC,GAAgBqB,GAAeA,EAAYK,EAAES,SACjDX,EAASkB,WACLzC,GAAgBqB,GAAeA,EAAYI,EAAEU,SAC7CxB,GAAMR,EAAUuC,QACfnB,EAAWpB,EAAUwC,iBAAiBH,YAAczC,EACrDwB,EAASkB,WAAazC,GAG1BM,EAAYP,EACZQ,EAAYP,KAGrB,GAxDX,CA4EIQ,EAAQE,OAKQ,YAAxBP,EAAU4C,WACVtC,IAEAR,EAAwB,iBAAE,OAAQQ,EAAO,GAG7Cb,EAAQa,MAAQA","file":"dragscroll.js","sourcesContent":["/**\n * @fileoverview dragscroll - scroll area by dragging\n * @version 0.0.8\n * \n * @license MIT, see http://github.com/asvd/dragscroll\n * @copyright 2015 asvd <heliosframework@gmail.com> \n */\n\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.dragscroll = {}));\n    }\n}(this, function (exports) {\n    var _window = window;\n    var _document = document;\n    var mousemove = 'mousemove';\n    var mouseup = 'mouseup';\n    var mousedown = 'mousedown';\n    var EventListener = 'EventListener';\n    var addEventListener = 'add'+EventListener;\n    var removeEventListener = 'remove'+EventListener;\n    var newScrollX, newScrollY;\n    var friction = 0.97;\n    var velocityX = 0;\n    var velocityY = 0;\n\n    var dragged = [];\n    var reset = function(i, el) {\n        for (i = 0; i < dragged.length;) {\n            el = dragged[i++];\n            el = el.container || el;\n            el[removeEventListener](mousedown, el.md, 0);\n            _window[removeEventListener](mouseup, el.mu, 0);\n            _window[removeEventListener](mousemove, el.mm, 0);\n        }\n\n        // cloning into array since HTMLCollection is updated dynamically\n        dragged = [].slice.call(_document.getElementsByClassName('dragscroll'));\n        for (i = 0; i < dragged.length;) {\n            (function(el, lastClientX, lastClientY, pushed, scroller, cont){\n                (cont = el.container || el)[addEventListener](\n                    mousedown,\n                    cont.md = function(e) {\n                        el.style['webkitCursor'] = 'grabbing';\n                        el.style['mozCursor'] = 'grabbing';\n                        el.style.cursor = 'grabbing';\n                        el.classList.add('dragging');\n                        if (!el.hasAttribute('nochilddrag') ||\n                            _document.elementFromPoint(\n                                e.pageX, e.pageY\n                            ) == cont\n                        ) {\n                            pushed = 1;\n                            lastClientX = e.clientX;\n                            lastClientY = e.clientY;\n\n                            e.preventDefault();\n                        }\n                    }, 0\n                );\n\n                _window[addEventListener](\n                    mouseup, cont.mu = function(e) {\n                        if (pushed) {\n                            window.requestAnimationFrame(function() {\n                                inertialScroll(el);\n                            });\n                        }\n                        \n                        pushed = 0;\n                        el.style['webkitCursor'] = 'grab';\n                        el.style['mozCursor'] = 'grab';\n                        el.classList.remove('dragging');\n                        el.style.cursor = 'grab';\n                    }, 0\n                );\n\n                _window[addEventListener](\n                    mousemove,\n                    cont.mm = function(e) {\n                        if (pushed) {\n                            window.requestAnimationFrame(function(){\n                                (scroller = el.scroller||el).scrollLeft -=\n                                    newScrollX = (- lastClientX + (lastClientX=e.clientX));\n                                scroller.scrollTop -=\n                                    newScrollY = (- lastClientY + (lastClientY=e.clientY));\n                                if (el == _document.body) {\n                                    (scroller = _document.documentElement).scrollLeft -= newScrollX;\n                                    scroller.scrollTop -= newScrollY;\n                                }\n                                \n                                velocityX = newScrollX;\n                                velocityY = newScrollY;\n                            });\n                        }\n                    }, 0\n                );\n\n                function inertialScroll(element) {\n                    (scroller = element.scroller||element).scrollLeft -= velocityX;\n                    scroller.scrollTop -= velocityY;\n                    if (element == _document.body) {\n                        (scroller = _document.documentElement).scrollLeft -= velocityX;\n                        scroller.scrollTop -= velocityY;\n                    }\n                    velocityX *= friction;\n                    velocityY *= friction;\n                    \n                    if (Math.abs(velocityY) > 0.5) {\n                        window.requestAnimationFrame(function(){\n                            inertialScroll(element);\n                        });\n                    }\n                }\n\n             })(dragged[i++]);\n        }\n    }\n\n      \n    if (_document.readyState == 'complete') {\n        reset();\n    } else {\n        _window[addEventListener]('load', reset, 0);\n    }\n\n    exports.reset = reset;\n}));\n\n"]}