{"version":3,"sources":["jquery.vide.js"],"names":["root","factory","define","amd","exports","require","jQuery","this","$","DEFAULTS","volume","playbackRate","muted","loop","autoplay","position","posterType","resizing","bgColor","className","NOT_IMPLEMENTED_MSG","parseOptions","str","delimiterIndex","option","prop","val","arr","len","i","obj","replace","split","length","search","indexOf","substring","undefined","isNaN","Vide","element","path","options","$element","hasOwnProperty","settings","extend","init","e","message","prototype","$video","$wrapper","vide","poster","sources","arg","args","x","y","parsePosition","addClass","css","z-index","top","left","bottom","right","overflow","-webkit-background-size","-moz-background-size","-o-background-size","background-size","background-color","background-repeat","background-position","mp4","webm","ogv","callback","onLoad","src","on","findPoster","url","prepend","defaultMuted","defaultPlaybackRate","Error","margin","-webkit-transform","-ms-transform","-moz-transform","transform","visibility","opacity","one","resize","append","getVideoObject","video","videoHeight","videoWidth","wrapperHeight","height","wrapperWidth","width","destroy","lookup","index","off","removeData","remove","fn","instance","each","data","push","document","ready","$window","window","find","PLUGIN_NAME"],"mappings":"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","file":"jquery.vide.js","sourcesContent":["!(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    factory(require('jquery'));\n  } else {\n    factory(root.jQuery);\n  }\n})(this, function($) {\n\n  'use strict';\n\n  /**\n   * Name of the plugin\n   * @private\n   * @const\n   * @type {String}\n   */\n  var PLUGIN_NAME = 'vide';\n\n  /**\n   * Default settings\n   * @private\n   * @const\n   * @type {Object}\n   */\n  var DEFAULTS = {\n    volume: 1,\n    playbackRate: 1,\n    muted: true,\n    loop: true,\n    autoplay: true,\n    position: '50% 50%',\n    posterType: 'detect',\n    resizing: true,\n    bgColor: 'transparent',\n    className: ''\n  };\n\n  /**\n   * Not implemented error message\n   * @private\n   * @const\n   * @type {String}\n   */\n  var NOT_IMPLEMENTED_MSG = 'Not implemented';\n\n  /**\n   * Parse a string with options\n   * @private\n   * @param {String} str\n   * @returns {Object|String}\n   */\n  function parseOptions(str) {\n    var obj = {};\n    var delimiterIndex;\n    var option;\n    var prop;\n    var val;\n    var arr;\n    var len;\n    var i;\n\n    // Remove spaces around delimiters and split\n    arr = str.replace(/\\s*:\\s*/g, ':').replace(/\\s*,\\s*/g, ',').split(',');\n\n    // Parse a string\n    for (i = 0, len = arr.length; i < len; i++) {\n      option = arr[i];\n\n      // Ignore urls and a string without colon delimiters\n      if (\n        option.search(/^(http|https|ftp):\\/\\//) !== -1 ||\n        option.search(':') === -1\n      ) {\n        break;\n      }\n\n      delimiterIndex = option.indexOf(':');\n      prop = option.substring(0, delimiterIndex);\n      val = option.substring(delimiterIndex + 1);\n\n      // If val is an empty string, make it undefined\n      if (!val) {\n        val = undefined;\n      }\n\n      // Convert a string value if it is like a boolean\n      if (typeof val === 'string') {\n        val = val === 'true' || (val === 'false' ? false : val);\n      }\n\n      // Convert a string value if it is like a number\n      if (typeof val === 'string') {\n        val = !isNaN(val) ? +val : val;\n      }\n\n      obj[prop] = val;\n    }\n\n    // If nothing is parsed\n    if (prop == null && val == null) {\n      return str;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Parse a position option\n   * @private\n   * @param {String} str\n   * @returns {Object}\n   */\n  function parsePosition(str) {\n    str = '' + str;\n\n    // Default value is a center\n    var args = str.split(/\\s+/);\n    var x = '50%';\n    var y = '50%';\n    var len;\n    var arg;\n    var i;\n\n    for (i = 0, len = args.length; i < len; i++) {\n      arg = args[i];\n\n      // Convert values\n      if (arg === 'left') {\n        x = '0%';\n      } else if (arg === 'right') {\n        x = '100%';\n      } else if (arg === 'top') {\n        y = '0%';\n      } else if (arg === 'bottom') {\n        y = '100%';\n      } else if (arg === 'center') {\n        if (i === 0) {\n          x = '50%';\n        } else {\n          y = '50%';\n        }\n      } else {\n        if (i === 0) {\n          x = arg;\n        } else {\n          y = arg;\n        }\n      }\n    }\n\n    return { x: x, y: y };\n  }\n\n  /**\n   * Search a poster\n   * @private\n   * @param {String} path\n   * @param {Function} callback\n   */\n  function findPoster(path, callback) {\n    var onLoad = function() {\n      callback(this.src);\n    };\n\n    $('<img src=\"' + path + '.gif\">').on('load', onLoad);\n    $('<img src=\"' + path + '.jpg\">').on('load', onLoad);\n    $('<img src=\"' + path + '.jpeg\">').on('load', onLoad);\n    $('<img src=\"' + path + '.png\">').on('load', onLoad);\n  }\n\n  /**\n   * Vide constructor\n   * @param {HTMLElement} element\n   * @param {Object|String} path\n   * @param {Object|String} options\n   * @constructor\n   */\n  function Vide(element, path, options) {\n    this.$element = $(element);\n\n    // Parse path\n    if (typeof path === 'string') {\n      path = parseOptions(path);\n    }\n\n    // Parse options\n    if (!options) {\n      options = {};\n    } else if (typeof options === 'string') {\n      options = parseOptions(options);\n    }\n\n    // Remove an extension\n    if (typeof path === 'string') {\n      path = path.replace(/\\.\\w*$/, '');\n    } else if (typeof path === 'object') {\n      for (var i in path) {\n        if (path.hasOwnProperty(i)) {\n          path[i] = path[i].replace(/\\.\\w*$/, '');\n        }\n      }\n    }\n\n    this.settings = $.extend({}, DEFAULTS, options);\n    this.path = path;\n\n    // https://github.com/VodkaBears/Vide/issues/110\n    try {\n      this.init();\n    } catch (e) {\n      if (e.message !== NOT_IMPLEMENTED_MSG) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Initialization\n   * @public\n   */\n  Vide.prototype.init = function() {\n    var vide = this;\n    var path = vide.path;\n    var poster = path;\n    var sources = '';\n    var $element = vide.$element;\n    var settings = vide.settings;\n    var position = parsePosition(settings.position);\n    var posterType = settings.posterType;\n    var $video;\n    var $wrapper;\n\n    // Set styles of a video wrapper\n    $wrapper = vide.$wrapper = $('<div>')\n      .addClass(settings.className)\n      .css({\n        position: 'absolute',\n        'z-index': -1,\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        overflow: 'hidden',\n        '-webkit-background-size': 'cover',\n        '-moz-background-size': 'cover',\n        '-o-background-size': 'cover',\n        'background-size': 'cover',\n        'background-color': settings.bgColor,\n        'background-repeat': 'no-repeat',\n        'background-position': position.x + ' ' + position.y\n      });\n\n    // Get a poster path\n    if (typeof path === 'object') {\n      if (path.poster) {\n        poster = path.poster;\n      } else {\n        if (path.mp4) {\n          poster = path.mp4;\n        } else if (path.webm) {\n          poster = path.webm;\n        } else if (path.ogv) {\n          poster = path.ogv;\n        }\n      }\n    }\n\n    // Set a video poster\n    if (posterType === 'detect') {\n      findPoster(poster, function(url) {\n        $wrapper.css('background-image', 'url(' + url + ')');\n      });\n    } else if (posterType !== 'none') {\n      $wrapper.css('background-image', 'url(' + poster + '.' + posterType + ')');\n    }\n\n    // If a parent element has a static position, make it relative\n    if ($element.css('position') === 'static') {\n      $element.css('position', 'relative');\n    }\n\n    $element.prepend($wrapper);\n\n    if (typeof path === 'object') {\n      if (path.mp4) {\n        sources += '<source src=\"' + path.mp4 + '.mp4\" type=\"video/mp4\">';\n      }\n\n      if (path.webm) {\n        sources += '<source src=\"' + path.webm + '.webm\" type=\"video/webm\">';\n      }\n\n      if (path.ogv) {\n        sources += '<source src=\"' + path.ogv + '.ogv\" type=\"video/ogg\">';\n      }\n\n      $video = vide.$video = $('<video>' + sources + '</video>');\n    } else {\n      $video = vide.$video = $('<video>' +\n        '<source src=\"' + path + '.mp4\" type=\"video/mp4\">' +\n        '<source src=\"' + path + '.webm\" type=\"video/webm\">' +\n        '<source src=\"' + path + '.ogv\" type=\"video/ogg\">' +\n        '</video>');\n    }\n\n    // https://github.com/VodkaBears/Vide/issues/110\n    try {\n      $video\n\n        // Set video properties\n        .prop({\n          autoplay: settings.autoplay,\n          loop: settings.loop,\n          volume: settings.volume,\n          muted: settings.muted,\n          defaultMuted: settings.muted,\n          playbackRate: settings.playbackRate,\n          defaultPlaybackRate: settings.playbackRate\n        });\n    } catch (e) {\n      throw new Error(NOT_IMPLEMENTED_MSG);\n    }\n\n    // Video alignment\n    $video.css({\n      margin: 'auto',\n      position: 'absolute',\n      'z-index': -1,\n      top: position.y,\n      left: position.x,\n      '-webkit-transform': 'translate(-' + position.x + ', -' + position.y + ')',\n      '-ms-transform': 'translate(-' + position.x + ', -' + position.y + ')',\n      '-moz-transform': 'translate(-' + position.x + ', -' + position.y + ')',\n      transform: 'translate(-' + position.x + ', -' + position.y + ')',\n\n      // Disable visibility, while loading\n      visibility: 'hidden',\n      opacity: 0\n    })\n\n    // Resize a video, when it's loaded\n    .one('canplaythrough.' + PLUGIN_NAME, function() {\n      vide.resize();\n    })\n\n    // Make it visible, when it's already playing\n    .one('playing.' + PLUGIN_NAME, function() {\n      $video.css({\n        visibility: 'visible',\n        opacity: 1\n      });\n      $wrapper.css('background-image', 'none');\n    });\n\n    // Resize event is available only for 'window'\n    // Use another code solutions to detect DOM elements resizing\n    $element.on('resize.' + PLUGIN_NAME, function() {\n      if (settings.resizing) {\n        vide.resize();\n      }\n    });\n\n    // Append a video\n    $wrapper.append($video);\n  };\n\n  /**\n   * Get a video element\n   * @public\n   * @returns {HTMLVideoElement}\n   */\n  Vide.prototype.getVideoObject = function() {\n    return this.$video[0];\n  };\n\n  /**\n   * Resize a video background\n   * @public\n   */\n  Vide.prototype.resize = function() {\n    if (!this.$video) {\n      return;\n    }\n\n    var $wrapper = this.$wrapper;\n    var $video = this.$video;\n    var video = $video[0];\n\n    // Get a native video size\n    var videoHeight = video.videoHeight;\n    var videoWidth = video.videoWidth;\n\n    // Get a wrapper size\n    var wrapperHeight = $wrapper.height();\n    var wrapperWidth = $wrapper.width();\n\n    if (wrapperWidth / videoWidth > wrapperHeight / videoHeight) {\n      $video.css({\n\n        // +2 pixels to prevent an empty space after transformation\n        width: wrapperWidth + 2,\n        height: 'auto'\n      });\n    } else {\n      $video.css({\n        width: 'auto',\n\n        // +2 pixels to prevent an empty space after transformation\n        height: wrapperHeight + 2\n      });\n    }\n  };\n\n  /**\n   * Destroy a video background\n   * @public\n   */\n  Vide.prototype.destroy = function() {\n    delete $[PLUGIN_NAME].lookup[this.index];\n    this.$video && this.$video.off(PLUGIN_NAME);\n    this.$element.off(PLUGIN_NAME).removeData(PLUGIN_NAME);\n    this.$wrapper.remove();\n  };\n\n  /**\n   * Special plugin object for instances.\n   * @public\n   * @type {Object}\n   */\n  $[PLUGIN_NAME] = {\n    lookup: []\n  };\n\n  /**\n   * Plugin constructor\n   * @param {Object|String} path\n   * @param {Object|String} options\n   * @returns {JQuery}\n   * @constructor\n   */\n  $.fn[PLUGIN_NAME] = function(path, options) {\n    var instance;\n\n    this.each(function() {\n      instance = $.data(this, PLUGIN_NAME);\n\n      // Destroy the plugin instance if exists\n      instance && instance.destroy();\n\n      // Create the plugin instance\n      instance = new Vide(this, path, options);\n      instance.index = $[PLUGIN_NAME].lookup.push(instance) - 1;\n      $.data(this, PLUGIN_NAME, instance);\n    });\n\n    return this;\n  };\n\n  $(document).ready(function() {\n    var $window = $(window);\n\n    // Window resize event listener\n    $window.on('resize.' + PLUGIN_NAME, function() {\n      for (var len = $[PLUGIN_NAME].lookup.length, i = 0, instance; i < len; i++) {\n        instance = $[PLUGIN_NAME].lookup[i];\n\n        if (instance && instance.settings.resizing) {\n          instance.resize();\n        }\n      }\n    });\n\n    // https://github.com/VodkaBears/Vide/issues/68\n    $window.on('unload.' + PLUGIN_NAME, function() {\n      return false;\n    });\n\n    // Auto initialization\n    // Add 'data-vide-bg' attribute with a path to the video without extension\n    // Also you can pass options throw the 'data-vide-options' attribute\n    // 'data-vide-options' must be like 'muted: false, volume: 0.5'\n    $(document).find('[data-' + PLUGIN_NAME + '-bg]').each(function(i, element) {\n      var $element = $(element);\n      var options = $element.data(PLUGIN_NAME + '-options');\n      var path = $element.data(PLUGIN_NAME + '-bg');\n\n      $element[PLUGIN_NAME](path, options);\n    });\n  });\n\n});\n"]}